{"version":3,"sources":["backgrounds/1.svg","backgrounds/2.svg","Pages/Main.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","margin","paperbody","padding","spacing","textAlign","color","fontFamily","papertitle","fontSize","Home","classes","className","style","backgroundImage","homebackground","backgroundRepeat","height","backgroundSize","Grid","container","justify","item","xs","sm","Slide","direction","in","timeout","Paper","homebackground2","enter","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAAe,MAA0B,8BCA1B,MAA0B,8B,2DCanCA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,EACVC,OAAQ,QAEVC,UAAW,CACTC,QAASL,EAAMM,QAAQ,GACvBC,UAAW,SACXC,MAAO,UACPC,WAAY,UAEdC,WAAY,CACVL,QAASL,EAAMM,QAAQ,GACvBC,UAAW,SACXC,MAAO,UACPC,WAAY,SACZE,SAAU,OACVR,OAAQ,YA4DGS,EAxDF,WACX,IAAMC,EAAUf,IAEhB,OACE,qCACE,qBACEgB,UAAU,aACVC,MAAO,CACLC,gBAAgB,OAAD,OAASC,EAAT,KACfC,iBAAkB,YAClBC,OAAQ,QACRC,eAAgB,SANpB,SASE,qBAAKN,UAAS,sBAAiBD,EAAQZ,MAAvC,SAEE,eAACoB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASjB,QAAS,EAA1C,UACE,cAACe,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACA,cAACC,EAAA,EAAD,CAAOC,UAAU,QAAQC,IAAI,EAAMC,QAAS,IAA5C,SACE,cAACC,EAAA,EAAD,CAAOjB,UAAWD,EAAQH,WAA1B,+BAGF,cAACW,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACA,cAACC,EAAA,EAAD,CAAOC,UAAU,OAAOC,IAAI,EAAMC,QAAS,IAA3C,SACE,cAACC,EAAA,EAAD,CAAOjB,UAAWD,EAAQT,UAA1B,2CAOR,qBACEU,UAAU,aACVC,MAAO,CACLC,gBAAgB,OAAD,OAASgB,EAAT,KACfd,iBAAkB,YAClBC,OAAQ,QACRC,eAAgB,SANpB,SASE,qBAAKN,UAAS,sBAAiBD,EAAQZ,MAAvC,SAEE,cAACoB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASjB,QAAS,EAA1C,SACE,cAACe,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACA,cAACC,EAAA,EAAD,CAAOC,UAAU,KAAKC,IAAI,EAAMI,OAAO,EAAMH,QAAS,IAAtD,SACE,cAACC,EAAA,EAAD,CAAOjB,UAAWD,EAAQH,WAA1B,yCC9DCwB,MAdf,WACE,OACE,mCACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,IAAZ,SACE,cAAC,EAAD,aCGGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3d0a327e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/1.1f97ab98.svg\";","export default __webpack_public_path__ + \"static/media/2.ede40984.svg\";","import React from \"react\";\nimport homebackground from \"../backgrounds/1.svg\";\nimport homebackground2 from \"../backgrounds/2.svg\"\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Slide from '@material-ui/core/Slide';\nimport VizSensor from 'react-visibility-sensor';\nimport \"../CSS/fonts.css\"\nimport \"../CSS/main.css\"\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    margin: 'auto'\n  },\n  paperbody: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: \"#EC008C\",\n    fontFamily: 'Ubuntu',\n  },\n  papertitle: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: \"#EC008C\",\n    fontFamily: 'Oswald',\n    fontSize: '60px',\n    margin: 'auto',\n  },\n}));\n\nconst Home = () => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <div\n        className=\"background\"\n        style={{\n          backgroundImage: `url(${homebackground})`,\n          backgroundRepeat: \"no-repeat\",\n          height: \"100vh\",\n          backgroundSize: \"cover\",\n        }}\n      >\n        <div className={`center-text ${classes.root}`}>\n          \n          <Grid container justify=\"center\" spacing={3}>\n            <Grid item xs={12} sm={7}>\n            <Slide direction=\"right\" in={true} timeout={800}>\n              <Paper className={classes.papertitle}>Zachary Gould</Paper>\n              </Slide>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n            <Slide direction=\"left\" in={true} timeout={800}>\n              <Paper className={classes.paperbody}>Fullstack Engineer</Paper>\n              </Slide>\n            </Grid>\n          </Grid>\n          \n        </div>\n      </div>\n      <div\n        className=\"background\"\n        style={{\n          backgroundImage: `url(${homebackground2})`,\n          backgroundRepeat: \"no-repeat\",\n          height: \"100vh\",\n          backgroundSize: \"cover\",\n        }}\n      >\n        <div className={`center-text ${classes.root}`}>\n          \n          <Grid container justify=\"center\" spacing={3}>\n            <Grid item xs={12} sm={7}>\n            <Slide direction=\"up\" in={true} enter={true} timeout={800}>\n              <Paper className={classes.papertitle}>Zachary Gould</Paper>\n              </Slide>\n            </Grid>\n          </Grid>\n          \n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Home from \"./Pages/Main\";\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}